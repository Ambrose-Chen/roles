---
# tasks file for loophole
#
- name: 'open important file attribute settings'
  shell: |
    chattr -i /etc/passwd;
    chattr -i /etc/shadow;
    chattr -i /etc/group;
    chattr -i /etc/gshadow;

- name: 'Check if anonymous users are not allowed to log in to FTP--Disable anonymous VSFTP user login'
  replace:
    path: '{{ item }}'
    regexp: '^anonymous_enable=.*$'
    replace: 'anonymous_enable=NO'
  loop:
    - '/etc/vsftpd.conf'
    - '/etc/vsftpd/vsftpd.conf'
  ignore_errors: yes

- name: 'Check if anonymous users are not allowed to log in to FTP--Disable anonymous WU-FTP user login'
  user:
    name: 'ftp'
    state: 'absent'

- name: 'Check user directory default access settings'
  replace:
    path: '/etc/login.defs'
    regexp: '^UMASK[\s]+[0-9]+'
    replace: 'UMASK    027'


- name: 'Check if snmp service is installed'
  yum:
    name: 'net-snmp'
    state: 'absent'

- name: 'Check user umask settings'
  replace:
    path: '{{ item }}'
    regexp: 'umask[\s]*[0-9]*'
    replace: 'umask    077'
  loop:
    - '/etc/csh.cshrc'
    - '/etc/csh.login'
    - '/etc/bashrc'
    - '/etc/profile'

- block:
    - name: 'Check important directory or file permission settings--0750'
      file:
        path: '{{ item }}'
        mode: '0750'
      loop:
        - '/tmp'
        - '/etc/rc0.d'
        - '/etc/rc1.d'
        - '/etc/rc2.d'
        - '/etc/rc3.d'
        - '/etc/rc4.d'
        - '/etc/rc5.d'
        - '/etc/rc6.d'
        - '/etc/rc.d/init.d'
    - name: 'Check important directory or file permission settings--0000'
      file:
        path: '{{ item }}'
        mode: '0000'
      loop:
        - '/etc/shadow'
    - name: 'Check important directory or file permission settings--0644'
      file:
        path: '{{ item }}'
        mode: '0644'
      loop:
        - '/etc/passwd'
        - '/etc/group'
        - '/etc/services'
    - name: 'Check important directory or file permission settings / Check if the log file is not globally writable --0600'
      file:
        path: '{{ item }}'
        mode: '0600'
      loop:
        - '/etc/xinetd.conf'
        - '/etc/inetd.conf'
        - '/etc/security'
        - '/etc/grub.conf'
        - '/boot/grub/grub.conf'
        - '/etc/lilo.conf'
        - '/etc/grub2.cfg'
        - '/boot/grub2/grub.cfg'
        - '/var/log/cron'
        - '/var/log/secure'
        - '/var/log/messages'
        - '/var/log/maillog'
        - '/var/log/boot.log'
        - '/var/log/mail'
        - '/var/log/localmessages'
        - '/var/log/spooler'
  ignore_errors: yes

- name: 'Check if the password lifetime is set'
  replace:
    path: '/etc/login.defs'
    regexp: 'PASS_MAX_DAYS[\s]+[0-9]+'
    replace: 'PASS_MAX_DAYS   90'

- name: 'Check minimum password length'
  replace:
    path: '/etc/login.defs'
    regexp: 'PASS_MIN_LEN[\s]+[0-9]+'
    replace: 'PASS_MIN_LEN   6'

- name: 'Check if the minimum number of days between password changes is set'
  replace:
    path: '/etc/login.defs'
    regexp: 'PASS_MIN_DAYS[\s]+[0-9]+'
    replace: 'PASS_MIN_DAYS   6'

- name: 'Check if warning days are set before password expires'
  replace:
    path: '/etc/login.defs'
    regexp: 'PASS_WARN_AGE[\s]+[0-9]+'
    replace: 'PASS_WARN_AGE   30'

- name: 'Check password reuse limit'
  replace:
    path: '/etc/pam.d/system-auth'
    regexp: '(password[\s]+sufficient((?!remember).)*$)'
    replace: '\1 remember=5'

- name: 'Check system kernel parameter configuration'
  sysctl:
    name: '{{ item.name }}'
    value: '{{ item.value }}'
    sysctl_set: yes
    state: present
    reload: yes
  loop:
    - name: 'net.ipv4.conf.all.accept_source_route'
      value: '0'
    - name: 'net.ipv4.conf.all.accept_redirects'
      value: '0'
    - name: 'net.ipv4.icmp_echo_ignore_broadcasts'
      value: '1'
    - name: 'net.ipv4.conf.all.send_redirects'
      value: '0'
    - name: 'net.ipv4.ip_forward'
      value: '0'

- name: 'Check if the command line interface is set to exit overtime'
  lineinfile:
    path: '/etc/profile'
    line: 'export TMOUT=600'

- name: 'Check the number of retained history commands'
  replace:
    path: '/etc/profile'
    regexp: 'HISTSIZE=[0-9]+'
    replace: 'HISTSIZE=5'

- name: 'Check the log file size of the keep history command'
  replace:
    path: '/etc/profile'
    regexp: 'HISTFILESIZE=[0-9]+'
    replace: 'HISTFILESIZE=5'

- name: 'Check if root user is not allowed to log in to FTP'
  lineinfile:
    path: '{{ item }}'
    line: 'root'
  loop:
    - '/etc/vsftpd/ftpusers'
    - '/etc/ftpusers'
  ignore_errors: yes

- name: 'Check system core dump settings'
  lineinfile:
    path: '/etc/security/limits.conf'
    line: '{{ item }}'
  loop:
    - '*    soft    core    0'
    - '*    hard    core    0'

- name: 'Check if IP masquerading and multi-IP binding are turned off--Check if multi-IP binding is disabled'
  replace:
    path: '/etc/host.conf'
    regexp: 'multi.*'
    replace: 'multi off'
- lineinfile:
    path: '/etc/host.conf'
    line: 'multi off'
    create: yes

- name: 'Check if IP masquerading and multi-IP binding are turned off--Check if IP masquerading is disabled'
  replace:
    path: '/etc/host.conf'
    regexp: 'nospoof.*'
    replace: 'nospoof on'
- lineinfile:
    path: '/etc/host.conf'
    line: 'nospoof on'
    create: yes

- name: 'Check device password complexity policy'
  lineinfile:
    path: '/etc/pam.d/system-auth'
    insertbefore: '.*pam_pwquality.so.*'
    line: 'password    requisite     pam_cracklib.so ucredit=-1 lcredit=-1 dcredit=-1'

- name: 'Check if /etc/aliases disables unnecessary aliases'
  lineinfile:
    path: '/etc/aliases'
    regexp: '(^{{ item }}.*)'
    line: '# \1'
    backrefs: yes
  loop:
    - 'games'
    - 'ingres'
    - 'system'
    - 'toor'
    - 'uucp'
    - 'manager'
    - 'dumper'
    - 'operator'
    - 'decode'
    - 'root'
  ignore_errors: yes

- name: 'Check if /etc/mail/aliases disables unnecessary aliases'
  lineinfile:
    path: '/etc/mail/aliases'
    regexp: '(^{{ item }}.*)'
    line: '# \1'
    backrefs: yes
  loop:
    - 'games'
    - 'ingres'
    - 'system'
    - 'toor'
    - 'uucp'
    - 'manager'
    - 'dumper'
    - 'operator'
    - 'decode'
    - 'root'
  ignore_errors: yes

- name: 'Check whether the system trust mechanism is turned off'
  shell: |
    find / -maxdepth 3 -name hosts.equiv -exec mv {} {}.bak \;
    find / -maxdepth 3 -type f -name .rhosts -exec mv {} {}.bak \;
    find / -maxdepth 3 -type f -name .netrc -exec mv {} {}.bak \;

- name: 'Restrict the attributes of uploaded files for FTP users after login / Check if the directory that FTP users can access after login is restricted'
  lineinfile:
    path: '/etc/vsftpd.conf'
    line: '{{ item }}'
  loop:
    - 'write_enable=YES'
    - 'ls_recurse_enable=YES'
    - 'local_umask=022'
    - 'anon_umask=022'
    - 'chroot_local_user=YES'
  ignore_errors: yes

- name: 'Check if important files have suid and sgid permissions'
  shell: |
    find /usr/bin/chage /usr/bin/gpasswd /usr/bin/wall /usr/bin/chfn /usr/bin/chsh /usr/bin/newgrp /usr/bin/write /usr/sbin/usernetctl /usr/sbin/traceroute /bin/mount /bin/umount /bin/ping /sbin/netreport -type f -perm /6000 -exec chmod a-s {} \; 2>/dev/null | cat

- name: 'For devices using IP protocol for remote maintenance, telnet protocol should be prohibited'
  lineinfile:
    path: '/etc/services'
    regexp: '(^telnet\s*23\/tcp)'
    line: '#  \1'
    backrefs: yes

- name: 'Check whether the remote log function is configured'
  lineinfile:
    path: '/etc/rsyslog.conf'
    line: '*.* @192.168.0.1'

- name: 'Check if user actions on the device are recorded'
  block:

    - name: 'yum install psacct'
      yum:
        name: 'psacct'
        state: 'latest'
    - name: 'touch /var/log/pacct'
      file:
        path: '/var/log/pacct'
        state: 'touch'
        mode: '0600'
    - name: 'accton /var/log/pacct'
      shell: |
        accton /var/log/pacct

- name: 'Check security event log configuration'
  block:
    - name: 'touch /var/adm/messages'
      file:
        path: '/var/adm/messages'
        state: 'touch'
        mode: '666'

    - name: 'Check if rsyslog is configured with security event log'
      lineinfile:
        path: '/etc/rsyslog.conf'
        line: '*.err;kern.debug;daemon.notice /var/adm/messages'
      notify:
        restart rsyslog

- name: 'Check account authentication failure limit (1/2)'
  lineinfile:
    path: '/etc/pam.d/sshd'
    insertbefore: '-auth      optional     pam_reauthorize.so prepare'
    line: 'account required pam_tally2.so'
- name: 'Check account authentication failure limit (2/2)'
  lineinfile:
    path: '/etc/pam.d/sshd'
    insertbefore: 'account required pam_tally2.so'
    line: 'auth required pam_tally2.so deny=5 unlock_time=600'

- name: 'Check if the remote login IP range is restricted allow'
  lineinfile:
    path: '/etc/hosts.allow'
    line: 'all:all:allow'
- name: 'Check if the remote login IP range is restricted deny'
  lineinfile:
    path: '/etc/hosts.deny'
    line: 'all:all'

- name: 'Check if you use PAM authentication module to prevent users su outside the wheel group from being root'
  lineinfile:
    path: '/etc/pam.d/su'
    regexp: '^\#.*pam_wheel.so\ use_uid'
    line: 'auth           required        pam_wheel.so use_uid'

- name: 'useradd -G wheel {{ _loophole_ssh_username }}'
  user:
    name: '{{ _loophole_ssh_username }}'
    state: 'present'
    groups: 'wheel'
    password: '{{ _loophole_ssh_password }}'

- name: 'Check whether root telnet login is prohibited'
  lineinfile:
    path: '/etc/pam.d/login'
    line: 'auth required pam_securetty.so'

- name: 'Check whether root ssh login is prohibited'
  lineinfile:
    path: '/etc/ssh/sshd_config'
    regexp: '^\#*PermitRootLogin.*'
    line: 'PermitRootLogin no'
    backrefs: yes
  notify:
    restart sshd
  

- name: 'Check important file attribute settings'
  shell: |
    chattr +i /etc/passwd;
    chattr +i /etc/shadow;
    chattr +i /etc/group;
    chattr +i /etc/gshadow;
